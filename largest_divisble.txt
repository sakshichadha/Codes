class Solution {
public:

    vector<int> largestDivisibleSubset(vector<int>& nums) {
        if(nums.empty())
        {vector<int>p;
            return p;
        }
                   sort(nums.begin(),nums.end());
        int n=nums.size();

       vector<int> ans[n];
    
     vector<int>t;
     
      
        t.push_back(nums[0]);
            ans[0]=t;
     
        for(int i=1;i<n;i++)
        {
         for(int j=0;j<i;j++)
         {
          if((nums[i]%nums[j]==0)&&(ans[i].size()<ans[j].size()+1))
              ans[i]=ans[j]; 
              
         }
        ans[i].push_back(nums[i]);
         
        }

        int m=0;
        vector<int>a;
        for(int i=0;i<n;i++)
        {
            //cout<<ans[i].size()<<endl;
            if(ans[i].size()>m)
            { a=ans[i];
             m=ans[i].size();
      
            }
                
        }
      
       return a;     
        
    }
};