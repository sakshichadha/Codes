/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
// int height(TreeNode*r)
// {
// if(r==NULL)
//     return 0;
//     return max(height(r->left),height(r->right))+1;
  
// }
// int help(TreeNode*root,TreeNode*parent)
// {
//  if(root==NULL)
//             return 0;   
//      if(root->left==NULL&&root->right==NULL)
//             return root->val;
    
//         int h=height(root->left);
//         int r=height(root->right);
//     return pow(10,h)*(parent->val)*()+help(root->left,root)+pow(10,r)*(parent->val)+help(root->right,root);

// }

 int help(TreeNode*root,int sum)
{
 if(root==NULL)
     return 0;
   int ans=sum*10+root->val;
   // cout<<temp<<endl;
    if(root->left==NULL&&root->right==NULL)
        return ans;

return  help(root->left,ans)+help(root->right,ans);
   
}
class Solution {
public:
    int sumNumbers(TreeNode* root) {
      return help(root,0);
    
        
    }
};