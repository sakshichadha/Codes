class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        unordered_map<int,int>s;
        int n=nums.size();
      
         //int flag=0;   
     
       sort(nums.begin(),nums.end());
        set<vector<int>>a;
        vector<vector<int>>ans;
        if(n==0||n==1||n==2)
            return ans;
        for(int i=0;i<n;i++)
        {
            vector<int>temp;
            temp.push_back(nums[i]);
            int j=i+1;
            int k=n-1;
            while(j<k)
            {
                if(nums[j]+nums[k]==-nums[i])
                {
                  
                  temp.push_back(nums[j]);
                  temp.push_back(nums[k]);
                    vector<int>t=temp;
                    sort(t.begin(),t.end());
                     a.insert(t);
                    temp.pop_back(); 
                     temp.pop_back(); 
                    j++;
                    k--;
                }
                else if(nums[j]+nums[k]<(-nums[i]))
                    j++;
                else
                    k--;
     
            }
            temp.clear();
        }
        
        for(auto j:a)
            ans.push_back(j);
       return ans; 
    }
};