/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
          vector<vector<int>>ans;
        if(root==NULL)
            return ans;
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
  
        vector<int>temp;
        temp.push_back(root->val);
        ans.push_back(temp);
        temp.clear();
        int flag=1;
        while(q.size()>1)
        {
            //cout<<q.size()<<endl;
          TreeNode*t=q.front();
            q.pop();
            if(t!=NULL)
            {
                if(t->left!=NULL)
                {q.push(t->left);
                        temp.push_back(t->left->val);
                }
                 if(t->right!=NULL)
                  { q.push(t->right);
                   temp.push_back(t->right->val);
                  }
         
            }
            else
            {
                if(flag)
                {
                    reverse(temp.begin(),temp.end());
                    ans.push_back(temp);
                    temp.clear();
                    flag=0;
                }
                else
                {
                    ans.push_back(temp);
                    temp.clear();
                    flag=1;
                }
                q.push(NULL);
            }
            
            
            
        }
     return ans;   
        
    }
};