class Solution {
public:
    static bool cmp(vector<int>a,vector<int>b)
    {return a[0]<b[0];
    }
    
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        if(intervals.empty())
            return intervals;
        if(intervals.size()==1)
        {
            return intervals;
        }
        sort(intervals.begin(),intervals.end(),cmp);
          vector<vector<int>>ans;
        ans.push_back(intervals[0]);
      
        int curr_index=0;
        int n=intervals.size();
        for(int i=1;i<n;i++)
        {
             vector<int>temp;
        
        if(intervals[i][0]>ans[curr_index][1])
        {
         temp=intervals[i];   
             ans.push_back(temp);
            curr_index++;
        }
           else if(intervals[i][0]<=ans[curr_index][1])
           {
        
               temp.push_back(min(intervals[i][0],ans[curr_index][0]));
               temp.push_back(max(intervals[i][1],ans[curr_index][1]));
                  if(!ans.empty())
            ans.pop_back();
               ans.push_back(temp);
        
           }
      
            
        }

        return ans;
        
    }
};