class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
   for(int i=0;i<=15;i++)
   {
       int bleft=n&(1<<(32-i-1));
       if(bleft!=0)
           bleft=1;
       else
           bleft=0;
           int bright=n&(1<<i);
               if(bright!=0)
                   bright=1;

      if(bleft==bright)
      {
          
      }
       else
       {
               //  cout<<bleft<<" "<<bright<<endl;
           if(bleft==0)
           {
               //cout<<"hi";
               n=n|(1<<(32-i-1));
            //   int b2=n&(1<<(32-i-1));
            // cout<<b2<<endl;
           }
          else if(bleft==1)
          {
              n=n&(~(1<<(32-i-1)));
                int b2=n&(1<<(32-i-1));
         
          }
               if(bright==0)
               {
                   n=n|(1<<i);
                   int b=n&(1<<i);
                   //cout<<b<<endl;
               }
           else if(bright==1)
           { //cout<<"h"<<endl;
               n=n&(~(1<<i));
            int b=n&(1<<i);
           // cout<<b<<endl;
           }
           int b=n&(1<<i);
           int b2=n&(1<<(32-i-1));
             //cout<<"*"<<b2<<" "<<b<<endl;
           
       }
         
       
   }
      return n;  
    }
};