class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        if(nums.empty())
        {
            vector<int>a;
            return a;
        }
        long int n=nums.size();
        long int x=0;
        for(int i=0;i<n;i++)
        {
            x=x^nums[i];
        }
        long int fo=x^-x;
        long int bi=0;
        for(int i=32;i>=0;i--)
        {
         if(x&1)
         {
             bi=32-i;
           break;  
         }
         x=x>>1;   
        }
        //cout<<x<<" "<<bi<<endl;
        long int a=0;
        long int b=0;
        
        for(int i=0;i<n;i++)
        {
       long int t=nums[i];
            //cout<<t<<" "<<endl;
            //int temp=(t>>(bi));
            //cout<<temp<<"*"<<endl;
         if((t>>(bi))&1)
         {
            // cout<<"hi"<<endl;
             a=a^t;
         }
            else
            {  // cout<<"hello"<<endl;
                b=b^t;
            }
            
        }
        vector<int>ans;
        ans.push_back(a);
        ans.push_back(b);
        return ans;
    }
};