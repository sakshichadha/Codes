/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head==NULL)
            return head;
      ListNode*evenhead=head->next;
         ListNode*oddhead=head;
         ListNode*eventail=evenhead;
         ListNode*oddtail=oddhead;
        int count=0;
        while(oddtail!=NULL&&eventail!=NULL)
        {
         count++;
            if(count%2!=0)
            {
                if(oddtail->next!=NULL)
                {oddtail->next=oddtail->next->next;
                 if(oddtail->next!=NULL)
                  oddtail=oddtail->next;
                }
                else
                { oddtail->next=NULL;
                 break;
                }
               
           
            }
            else
            {
                if(eventail->next!=NULL)
                {
            eventail->next=eventail->next->next;    
                eventail=eventail->next;
                }
                else
                {eventail->next=NULL;
                 break;
                }
                
            }         
        }
        oddtail->next=evenhead;
           
        return oddhead;
    }
};