/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
      queue<TreeNode*>q;
    vector<vector<int>> levelOrderBottom(TreeNode* root) {

        vector<vector<int>>ans;
        if(root==NULL)
            return ans;
        vector<int>t;
      q.push(root);
        t.push_back(root->val);
        ans.push_back(t);
        q.push(NULL);
        t.clear();
        while(q.size()!=1)
        {
        
          TreeNode*temp=q.front();
           
            q.pop();
            if(temp!=NULL)
            {if(temp->left)
            { q.push(temp->left);
            t.push_back(temp->left->val);
            }
             if(temp->right)
             { q.push(temp->right);
             t.push_back(temp->right->val);
             }
            }
            else
            {
                //q.pop();
             ans.push_back(t);
             t.clear();
                q.push(NULL);
            }
            
            
        }
        reverse(ans.begin(),ans.end());
      return ans;
    }
};